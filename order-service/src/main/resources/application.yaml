#spring:
#jpa:
#show-sql: true
#hibernate:
#ddl-auto: update
#datasource:
#url: jdbc:mysql://localhost:3306/order-service
#username: root
#password:
#driverClassName: com.mysql.cj.jdbc.Driver
#server:
#  port: 8081

spring:
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://localhost:3306/order_service
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver
  application:
    name: order-service
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.example.orderservice.event.OrderPlacedEvent

logging:
  pattern: level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]



server:
  port: 8081
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  #Resilinece4j Properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s


#  spring.kafka.bootstrap-servers=localhost:9092
#  spring.kafka.template.default-topic=notificationTopic
#  spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#  spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#  spring.kafka.producer.properties.spring.json.type.mapping=event:com.programmingtechie.orderservice.event.OrderPlacedEvent
#  logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]