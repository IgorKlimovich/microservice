eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
spring:
  application:
    name: notification-service
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    consumer:
      group-id: notificationId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.example.notificationservice.OrderPlacedEvent
server:
  port: 0

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans/
  tracing:
    sampling:
      probability: 1
  endpoints:
    web:
      exposure:
        include: prometheus
#kafka:
#  bootstrap-servers: localhost:9092
#  template:
#    default-topic: notificationTopic
#  producer:
#    key-serializer: org.apache.kafka.common.serialization.StringSerializer
#    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    properties:
#      spring:
#        json:
#          type:
#            mapping: event:com.programmingtechie.orderservice.event.OrderPlacedEvent

logging:
  pattern: level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
  # Kafka Properties
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.template.default-topic=notificationTopic
#spring.kafka.consumer.group-id= notificationId
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=event:com.programming.techie.OrderPlacedEvent
#
#  # Actuator Prometheus Endpoint
#management.endpoints.web.exposure.include= prometheus
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]